<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--    扫描控制层组件-->
    <context:component-scan base-package="com.atwzs.controller"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--    视图控制器：为当前的请求设置视图名称实现页面跳转-->
    <mvc:view-controller path="/" view-name="index"/>

    <!--    开启mvc的注解驱动-->
    <mvc:annotation-driven/>

    <!--
        配置默认的servlet处理静态资源
        当前工程的web.xml配置的前端控制器DispatcherServlet的url-pattern是tomcat的web.xml配置的DefaultServlet的url-pattern
        也是/,此时,浏览器发送的请求会优先被DispatcherServlet进行处理，，但是DispatcherServlet无法处理静态资源
        若配置了<mvc:default-servlet-handler/>,此时浏览器发送的请求都会被DefaultServlet处理
        若配置了<mvc:default-servlet-handler/>和<mvc:annotation-driven/>
        浏览器发送的请求会先被DispatcherServlet处理，无法处理在交给DefaultServlet处理
    -->
    <mvc:default-servlet-handler/>

    <!--    配置视图控制器-->
    <!--    没有前置return ""，就输入url就可以进来的话，用视图控制器-->
    <mvc:view-controller path="/to/add" view-name="employee_add"/>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象,id必须为multipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>
</beans>